---
title: "R Basic visualisation"
author: "Bogdan Sotnikov"
format: html
editor: visual
---

## Прелиминарии

Настраиваем qmd, подгружаем пакеты

```{r setup}
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE, error = FALSE, fig.width=20, fig.height=14)
# install.packages("ggExtra")
# install.packages("ggpubr")
# install.packages("ggridges")
# install.packages("rstatix")
# install.packages("geomtextpath")
library(tidyverse)
library(ggExtra)
library(ggridges)
library(ggpubr)
library(rstatix)
library(geomtextpath) # в зависимости от наличия пакета
```

Подгружаем датасет

```{r}
hogwarts <- read_csv("data/hogwarts.csv")
```

## Действо

![](images/owl1.jpg){width="2024"}

![](images/owl2.png)

![](images/shrek.png)

Обсуждаем слои

```{r ggplotIntro, fig.width=20, fig.height=14}
fillValues <- c("#C50000", "#ECB939", "#41A6D9", "#1F5D25")
names(fillValues) <- hogwarts |> select(house) |> pull() |> unique()
gridLab <- c("Девочки", "Мальчики")
names(gridLab) <- hogwarts |> select(sex) |> pull() |> unique() |> sort()

ggplot(hogwarts, aes(y = house,
                     x = result))#+
geom_violin(aes(fill = house))#+
geom_boxplot(width = 0.05,
             colour = "grey50")#+
geom_vline(xintercept = 0,
           linetype = "dashed",
           colour = "salmon",
           linewidth = 2)#+
labs(
title = "Баллы студентов Хогвартса",
subtitle = "Распределение числа баллов у студентов различных факультетов Хогвартса в 2023-2024 учебном году",
y = "Колледж",
x = "Количество очков",
fill = "Колледж",
caption = "Источник: нездоровая фантазия автора лекции"
   )#+
stat_summary(fun.y=mean, # Дать на вход другие данные
             geom="point",
             shape=21,
             size=10,
             color="grey70",
             fill="#7D5535")#+
facet_grid(. ~ sex,
           labeller = labeller(sex = gridLab))#+
theme_bw()#+
theme(axis.text.x = element_blank(),
    axis.text.y = element_text(size=20,
                               family = "Times new roman"),
    axis.title.x = element_blank(),
    axis.title.y = element_text(size=29,
                                family = "Times new roman"),
    plot.title = element_text(size=32,
                              hjust=0.5,
                              family = "Times new roman"),
    plot.subtitle = element_text(size = 20,
                                 hjust=0.5,
                                 colour = "#7D5535"),
    legend.title = element_text(size=25,
                                family = "Times new roman"),
    legend.text = element_text(size=25,
                               family = "Times new roman",
                               face = "italic"),
    strip.text.x = element_text(size = 25,
                                family = "Times new roman"))#+
scale_fill_manual(name = "Факультет",
                  labels = c("Гриффиндор", "Пуффендуй", "Когтевран", "Слизерин"),
                  values = fillValues)#+
scale_x_continuous(breaks = seq(-400, 400, by = 50))#+
  annotate(geom = "segment", arrow = arrow(), y = rep("Ravenclaw",2), yend = rep("Slytherin",2), x = c(250, -250), xend = c(250, -250), linewidth = 1.3, colour = "black")#+
  coord_flip()

# сохраняем кусочек кода в переменную
theme_custom <- theme(axis.text.x = element_text(size=25),
    axis.text.y = element_text(size=20,
                               family = "Times new roman"),
    axis.title.x = element_text(size=25),
    axis.title.y = element_text(size=29,
                                family = "Times new roman"),
    plot.title = element_text(size=32,
                              hjust=0.5,
                              family = "Times new roman"),
    plot.subtitle = element_text(size = 20,
                                 hjust=0.5),
    strip.text.x = element_text(size = 25,
                                family = "Times new roman"),
    strip.text.y = element_text(size = 25,
                                family = "Times new roman"))
```

Распределение количественной переменной

```{r gh1, fig.width=10, fig.height=6}


```

![](images/colorbynames.png)

Решение проблемы нескольких распределений 1

```{r gf, fig.width=16, fig.height=12}

```

![](images/box.png)

Решение проблемы нескольких распределений 2

```{r gbo, fig.width=25, fig.height=25}

```

Решение проблемы нескольких распределений 3

![](images/shrek2.png)

```{r ridge}

```

```{r seg}

```

Распределение категориальной переменной

```{r gba}

```

![](images/hexcolorggplot.png){width="500"}

2 количественные переменные

```{r gp, fig.width=20, fig.height=14}
set.seed(1999)

shapeLabelNames <- 1:7
shapeLabel <- c(49:55)
names(shapeLabel) <- shapeLabelNames
# подход 1
plot2 <- ggplot(hogwarts)+
  geom_point(aes(x = `Transfiguration exam`, y = `Charms exam`, 
                 shape = as.factor(course),
                 colour = as.factor(course)),
             size = 5)+
  # geom_point(data = hogwarts |> filter(house == "Hufflepuff", sex == "female"), 
  #            aes(x = `Transfiguration exam`, y = `Charms exam`),
  #            fill = "yellow",
  #            shape = 21,
  #            colour = "green",
  #            stroke = 2,
  #            size = 5)+
  geom_textsmooth(aes(x = `Transfiguration exam`, y = `Charms exam`, colour = "red", label = sex),
                  size = 10, linewidth = 3,
              method = "lm")+
  facet_grid(.~sex)+
  labs(
    title = "Половой состав факультетов Хогвартса",
    subtitle = "Учебный год 2023-2024",
    caption = "Нездоровая фантазия автора датасета",
    x = "Факультет",
    y = "Количество студентов",
    fill = "Пол"
  )+
  scale_shape_manual(values = shapeLabel)+
  scale_x_continuous(breaks = seq(0, 100, l = 11), labels = paste0(seq(0, 100, l = 11), " баллов"))+
  theme(
    plot.background = element_rect(fill = "#CCAB6F"),
    panel.background = element_rect(fill = "#E7E3AF", 
                                    linetype = "dotted", 
                                    colour = "brown", 
                                    linewidth = 5),
    plot.title = element_text(size = 35, face = "bold", family = "Times new roman", hjust = 0.5),
    axis.title.x = element_blank(),
    axis.text.x = element_text(size = 20, angle = 25),
    axis.ticks.length.x = unit(0.3, "cm"),
    legend.justification = "bottom",
    legend.position = "inside",
    legend.direction = "horizontal",
    legend.key = element_rect(fill = "#7D5535", 
                              colour = "#761919", 
                              linewidth = 0.5, 
                              linetype = "solid")
  )+
  annotate(geom = "rect", xmin = 0, xmax = 20, ymin = 90, ymax = 100, fill = "magenta", alpha = 0.2)+
  annotate(geom = "segment", arrow = arrow(), x = 15, xend = 28, y = 75, yend = 75, linewidth = 1.5, colour = "black")
plot2

############   Цвета для темы   ############
# Задник графика, легенды и гридов, сетка панели "#CCAB6F"
# Задник панели "#E7E3AF"
# Контур панели и гридов "#662F19"
# Задник ключей "#7D5535"
# Контур ключей и легенды "#761919" 
############                    ############


```

![](images/ggplot2shapey.png){width="1200"}

```{r gline}
huffleMailLong <- 
```

```{r gconv, fig.width=25, fig.height=25}
histCustom <- function(df, variable, n){
  df |>
  ggplot()+
  geom_histogram(aes(x = {{variable}}), 
                 fill = "lightgreen", 
                 colour = "grey50",
                 bins = n)+
    labs(
      title = paste0("Гистограмма с ", n, " столбцами")
    )+
    theme_bw()+
    theme(axis.text.x = element_text(size=25, angle = 15),
    axis.text.y = element_text(size=20,
                               family = "Times new roman"),
    axis.title.x = element_text(size=25),
    axis.title.y = element_text(size=29,
                                family = "Times new roman"),
    plot.title = element_text(size=32,
                              hjust=0.5,
                              family = "Times new roman"))
}

```

```{r gadd}
ggplot(hogwarts)+
  geom_point(aes(x = `Charms exam`,
                 y = `Transfiguration exam`,
                 fill = house),
             shape = 21,
             size = 5,
             stroke = 0.5,
             colour = "green")+
  geom_point(data = hogwarts |> filter(`Flying exam` < 30),
             aes(x = `Potions exam`, y = `Transfiguration exam`),
             colour = "black", size = 4)+
  geom_textsmooth(aes(x = `Potions exam`, y = `Transfiguration exam`, colour = house, label = house),
              se = FALSE, method = "lm", family = "Times new roman", size = 7, linewidth = 1.3)+
  theme_custom
```

```{r ger}

```

```{r gsu}

```

```{r rstat}
testResult <- t_test(data = hogwarts |> filter(house == "Hufflepuff"), 
       result ~ sex) |> 
  mutate(across(where(is.numeric), ~ round(.x, 3)))

hogwarts |> 
  filter(house == "Hufflepuff") |> 
  ggplot()+
  geom_boxplot(aes(x = sex, y = result, fill = sex))+
  theme_custom
```

## Дополнительные источники

-   [Сайт с примерами графиков и полезными советами](https://r-graph-gallery.com/)
-   [Оригинальная статья с изложением философии ggplot](https://byrneslab.net/classes/biol607/readings/wickham_layered-grammar.pdf)
-   [Документация ggplot](https://ggplot2.tidyverse.org/)
-   [Учебник по data-science от авторов ggplot](https://r4ds.hadley.nz/)
-   [Учебник по ggplot от авторов ggplot (в процессе написания)](https://ggplot2-book.org/)
-   [Телеграм-канал про визуализацию (не в биомедицине, и не на R, но от этого не менее хороший)](https://t.me/nastengraph)
-   [Шпаргалка по ggplot2](https://rstudio.github.io/cheatsheets/html/data-visualization.html)
